@{
    ViewData["Title"] = "Products";
    var products = ViewBag.Products as List<ProductSalesApp.Models.Product>;
}

<div class="container my-4">
    <h1 class="mb-4 text-center">Products</h1>

    <div id="product-list">
        @await Html.PartialAsync("_ProductListPartial")
    </div>

    <hr class="my-5" />

    <h2 class="mb-3">🛒 Shopping Cart</h2>
    <div id="cart-container">
        @await Html.PartialAsync("_CartPartial")
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".add-to-cart-form").forEach(form => {
                form.addEventListener("submit", function (e) {
                    e.preventDefault();

                    const formData = new FormData(form);

                    fetch(form.action, {
                        method: "POST",
                        body: formData
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {

                            // Ürün listesini güncelle
                            fetch('/Sales/GetProductList')
                                .then(response => response.text())
                                .then(html => {
                                    document.getElementById("product-list").innerHTML = html;

                                    // Yeni gelen formlar için tekrar event bind et
                                    bindAddToCartForms();
                                });

                            // Sepeti güncelle
                            fetch('/Sales/GetCartPartial')
                                .then(response => response.text())
                                .then(html => {
                                    document.getElementById("cart-container").innerHTML = html;
                                });

                            fetch('/Sales/GetCartSummary')
                                .then(response => response.text())
                                .then(html => {
                                    document.getElementById("cart-summary").innerHTML = html;
                                });

                            // Başarılı toast
                            const toastEl = document.getElementById('successToast');
                            toastEl.querySelector('.toast-body').textContent = data.message;
                            const toast = new bootstrap.Toast(toastEl, { delay: 1500 });
                            toast.show();

                        } else {
                            const toastEl = document.getElementById('errorToast');
                            toastEl.querySelector('.toast-body').textContent = data.message;
                            const toast = new bootstrap.Toast(toastEl, { delay: 1500 });
                            toast.show();
                        }
                    })
                    .catch(error => {
                        console.error("Error:", error);
                    });
                });
            });
        });

        // Yeni gelen ürün listesi için yeniden form event bind et
        function bindAddToCartForms() {
            document.querySelectorAll(".add-to-cart-form").forEach(form => {
                form.addEventListener("submit", function (e) {
                    e.preventDefault();

                    const formData = new FormData(form);

                    fetch(form.action, {
                        method: "POST",
                        body: formData
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {

                            fetch('/Sales/GetProductList')
                                .then(response => response.text())
                                .then(html => {
                                    document.getElementById("product-list").innerHTML = html;

                                    bindAddToCartForms();
                                });

                            fetch('/Sales/GetCartPartial')
                                .then(response => response.text())
                                .then(html => {
                                    document.getElementById("cart-container").innerHTML = html;
                                });

                            fetch('/Sales/GetCartSummary')
                                .then(response => response.text())
                                .then(html => {
                                    document.getElementById("cart-summary").innerHTML = html;
                                });

                            const toastEl = document.getElementById('successToast');
                            toastEl.querySelector('.toast-body').textContent = data.message;
                            const toast = new bootstrap.Toast(toastEl, { delay: 1500 });
                            toast.show();

                        } else {
                            const toastEl = document.getElementById('errorToast');
                            toastEl.querySelector('.toast-body').textContent = data.message;
                            const toast = new bootstrap.Toast(toastEl, { delay: 1500 });
                            toast.show();
                        }
                    })
                    .catch(error => {
                        console.error("Error:", error);
                    });
                });
            });
        }
    </script>
}











